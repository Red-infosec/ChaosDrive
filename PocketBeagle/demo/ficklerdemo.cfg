# Sample chaosDrive config file

[auth]
# configFile: chaosDrive looks for in the root of the public LUN to set configuration
# if this config file is found, and the top line contains the proper plaintext password
# chaosDrive will replace the its config file with the new one
configFile = newconfig.cfg
# passwd: authentication password chaosDrive requires to trust the config file
# stored as crypt encrypted string.  Use chaosDrive password to generate entry
# default is loki
passwd = $6$YilSflf8$j1oDXgC5FXDfKekam87A73c8GfGmbFH34gtxsxUI1CKulTQPPZZ173jOsYGUz0fAh3tLeaLHqWLlmHu4rbHv60

[usb]
# USB device desciptors
# Don't change these
stall = 0
removable = 1

# You can change these
iManufacturer = 0tt3rDisks
iProduct = ChaosDrive
iSerialNumber = 1EE7KAOSHAX
bcdDevice = 0x0001
idProduct = 0x0104
idVendor= 0x1d6b

# Mimic data
#iManufacturer = PNY Technologies
#iProduct = USB 2.0 FD
#iSerialNumber = AU39230440000192
#bcdDevice = 0x0101
#idProduct = 0x0099
#idVendor= 0x154b

[lun]
# public backing file
publicLUN = /etc/chaos/backing/public.bin
# secret backing file
secretLUN = /etc/chaos/backing/secret.bin

[loop]
# location to mount the public backing file when needed
loop = /mnt/chaos
# location to mount the secret backing file when needed
secret_loop = /mnt/secret

[dupe]
# When active = True, this will copy files stored on the publicLUN to the secretLUN
active = False

# this is the full option set to follow the rsync command
rsync_options = -va

# set the destination directory on the secret mount point (see secret_loop)
rsync_dest = dupe

# If this is True, then chaosDrive won't present the LUN until the copy is complete (good integrity)
# if this is False, chaosDrive will present the LUN AND begin the copy operation simultaneously
# this can present significant integrity issues with the file, but will prevent any
# suspicious delays in LUN presentation
wait_for_dupe = False


[reveal]
# chaosDrive will display the secretLUN if this file is stored on the root of the LUN
# the filename must be exact
active = True
filename = revelio

# if auth = True, then the reveal file must also have the plaintext password entry in the top line
auth = True

[fickler]
# chaosDrive will display the secretLUN for every interval times the drive is mounted
active = True
interval = 2
ficklerfile = /etc/chaos/logs/fickler_count

[alchemy]
# chaosDrive will mount the public and secret backing files and execute the given script
# this is designed to allow covert modification of files found on the public backing file
# however, it will run any script, and as a privileged user..  so be careful
# scripts can accept optional arguments that are the location of the mounted LUNs
# --publicLun=[XXX]  --secretLUN=[XXX]
active = False
script = /etc/chaos/alchemyTest.py

[squawk]
# If chaosDrive sees this file in the root of the publicLUN it will turn into
# an ethernet gadget to allow logging in directly to the linux system
active = True
filename = swordfish

# if auth = True, then the reveal file must also have the plaintext password entry in the top line
auth = False

[failfail]
# stores the count of hard fails
# squawk is the fall back functionality if chaosdrive keeps failing.
# when failcount reaches maxfailcount below, squawk will activate
failfile = /etc/chaos/logs/fail_count
maxfailcount = 5
